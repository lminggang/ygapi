# Generated by Django 2.0.5 on 2019-03-21 19:10

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='WxUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('token', models.CharField(blank=True, max_length=64, null=True, verbose_name='token')),
                ('nickName', models.CharField(blank=True, max_length=30, null=True, verbose_name='昵称')),
                ('img_id', models.ImageField(blank=True, max_length=200, upload_to='user_img/', verbose_name='用户头像URL')),
                ('sex', models.CharField(choices=[('0', '未知'), ('1', '男'), ('2', '女')], default='0', max_length=4, verbose_name='性别')),
                ('province', models.CharField(blank=True, max_length=20, null=True, verbose_name='用户所在省')),
                ('city', models.CharField(blank=True, max_length=20, null=True, verbose_name='用户所在市')),
                ('country', models.CharField(blank=True, max_length=20, null=True, verbose_name='用户所在旗县区')),
                ('longitude', models.FloatField(default=0, verbose_name='经度')),
                ('latitude', models.FloatField(default=0, verbose_name='纬度')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='描述')),
                ('account_state', models.BooleanField(default='1', verbose_name='账户状态')),
                ('phone_number', models.CharField(blank=True, max_length=64, null=True, verbose_name='电话号码')),
                ('sign', models.IntegerField(default=0, verbose_name='签到')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '管理员',
                'verbose_name_plural': '管理员',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
